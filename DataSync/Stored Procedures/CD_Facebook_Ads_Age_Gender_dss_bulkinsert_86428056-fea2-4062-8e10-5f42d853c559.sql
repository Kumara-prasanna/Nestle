CREATE PROCEDURE [DataSync].[CD_Facebook_Ads_Age_Gender_dss_bulkinsert_86428056-fea2-4062-8e10-5f42d853c559]
	@sync_min_timestamp BigInt,
	@sync_scope_local_id Int,
	@changeTable [DataSync].[CD_Facebook_Ads_Age_Gender_dss_BulkType_86428056-fea2-4062-8e10-5f42d853c559] READONLY
AS
BEGIN
-- use a temp table to store the list of PKs that successfully got updated/inserted
DECLARE @changed TABLE ([campaign_id] bigint, [ad_id] bigint, [adset_id] bigint, [age_ag] nvarchar(200) COLLATE SQL_Latin1_General_CP1_CI_AS, [account_id] bigint, [date_start] date, [gender_ag] nvarchar(200) COLLATE SQL_Latin1_General_CP1_CI_AS, PRIMARY KEY ([campaign_id], [ad_id], [adset_id], [age_ag], [account_id], [date_start], [gender_ag]));

-- update/insert into the base table
MERGE [dbo].[CD_Facebook_Ads_Age_Gender] AS base USING
-- join done here against the side table to get the local timestamp for concurrency check
(SELECT p.*, t.local_update_peer_timestamp FROM @changeTable p LEFT JOIN [DataSync].[CD_Facebook_Ads_Age_Gender_dss_tracking] t ON p.[campaign_id] = t.[campaign_id] AND p.[ad_id] = t.[ad_id] AND p.[adset_id] = t.[adset_id] AND p.[age_ag] = t.[age_ag] AND p.[account_id] = t.[account_id] AND p.[date_start] = t.[date_start] AND p.[gender_ag] = t.[gender_ag]) AS changes ON changes.[campaign_id] = base.[campaign_id] AND changes.[ad_id] = base.[ad_id] AND changes.[adset_id] = base.[adset_id] AND changes.[age_ag] = base.[age_ag] AND changes.[account_id] = base.[account_id] AND changes.[date_start] = base.[date_start] AND changes.[gender_ag] = base.[gender_ag]
WHEN NOT MATCHED BY TARGET AND changes.local_update_peer_timestamp <= @sync_min_timestamp OR changes.local_update_peer_timestamp IS NULL THEN
INSERT ([dt_created], [dt_updated], [dt_filename], [date_stop], [campaign_id], [video_p25_watched_actionsvideo_view], [actionslink_click], [cpm], [ad_id], [actionspost_reaction], [ad_name], [video_p50_watched_actionsvideo_view], [adset_id], [spend], [actionsvideo_view], [cpc], [age_ag], [impressions], [ctr], [adset_name], [video_p75_watched_actionsvideo_view], [video_p100_watched_actionsvideo_view], [actionspost_engagement], [video_play_actionsvideo_view], [campaign_name], [actionscomment], [actionspage_engagement], [objective], [actionsonsite_conversionpost_save], [account_id], [clicks], [date_start], [gender_ag], [account_name], [actionspost], [campaign_stop_time], [ad_creative_image_url], [ad_creative_title], [ad_creative_thumbnail_url], [ad_creative_body], [campaign_start_time], [conversions], [video_p100_watched_actions], [video_p25_watched_actions], [video_p50_watched_actions], [video_p75_watched_actions], [video_play_actions], [website_purchase_roas], [actionsinteractive_component_tap]) VALUES (changes.[dt_created], changes.[dt_updated], changes.[dt_filename], changes.[date_stop], changes.[campaign_id], changes.[video_p25_watched_actionsvideo_view], changes.[actionslink_click], changes.[cpm], changes.[ad_id], changes.[actionspost_reaction], changes.[ad_name], changes.[video_p50_watched_actionsvideo_view], changes.[adset_id], changes.[spend], changes.[actionsvideo_view], changes.[cpc], changes.[age_ag], changes.[impressions], changes.[ctr], changes.[adset_name], changes.[video_p75_watched_actionsvideo_view], changes.[video_p100_watched_actionsvideo_view], changes.[actionspost_engagement], changes.[video_play_actionsvideo_view], changes.[campaign_name], changes.[actionscomment], changes.[actionspage_engagement], changes.[objective], changes.[actionsonsite_conversionpost_save], changes.[account_id], changes.[clicks], changes.[date_start], changes.[gender_ag], changes.[account_name], changes.[actionspost], changes.[campaign_stop_time], changes.[ad_creative_image_url], changes.[ad_creative_title], changes.[ad_creative_thumbnail_url], changes.[ad_creative_body], changes.[campaign_start_time], changes.[conversions], changes.[video_p100_watched_actions], changes.[video_p25_watched_actions], changes.[video_p50_watched_actions], changes.[video_p75_watched_actions], changes.[video_play_actions], changes.[website_purchase_roas], changes.[actionsinteractive_component_tap])
OUTPUT INSERTED.[campaign_id], INSERTED.[ad_id], INSERTED.[adset_id], INSERTED.[age_ag], INSERTED.[account_id], INSERTED.[date_start], INSERTED.[gender_ag] INTO @changed; -- populates the temp table with successful PKs

UPDATE side SET
update_scope_local_id = @sync_scope_local_id, 
scope_update_peer_key = changes.sync_update_peer_key, 
scope_update_peer_timestamp = changes.sync_update_peer_timestamp,
local_update_peer_key = 0,
create_scope_local_id = @sync_scope_local_id,
scope_create_peer_key = changes.sync_create_peer_key,
scope_create_peer_timestamp = changes.sync_create_peer_timestamp,
local_create_peer_key = 0
FROM 
[DataSync].[CD_Facebook_Ads_Age_Gender_dss_tracking] side JOIN 
(SELECT p.[campaign_id], p.[ad_id], p.[adset_id], p.[age_ag], p.[account_id], p.[date_start], p.[gender_ag], p.sync_update_peer_timestamp, p.sync_update_peer_key, p.sync_create_peer_key, p.sync_create_peer_timestamp FROM @changed t JOIN @changeTable p ON p.[campaign_id] = t.[campaign_id] AND p.[ad_id] = t.[ad_id] AND p.[adset_id] = t.[adset_id] AND p.[age_ag] = t.[age_ag] AND p.[account_id] = t.[account_id] AND p.[date_start] = t.[date_start] AND p.[gender_ag] = t.[gender_ag]) AS changes ON changes.[campaign_id] = side.[campaign_id] AND changes.[ad_id] = side.[ad_id] AND changes.[adset_id] = side.[adset_id] AND changes.[age_ag] = side.[age_ag] AND changes.[account_id] = side.[account_id] AND changes.[date_start] = side.[date_start] AND changes.[gender_ag] = side.[gender_ag]
SELECT [campaign_id], [ad_id], [adset_id], [age_ag], [account_id], [date_start], [gender_ag] FROM @changeTable t WHERE NOT EXISTS (SELECT [campaign_id], [ad_id], [adset_id], [age_ag], [account_id], [date_start], [gender_ag] from @changed i WHERE t.[campaign_id] = i.[campaign_id] AND t.[ad_id] = i.[ad_id] AND t.[adset_id] = i.[adset_id] AND t.[age_ag] = i.[age_ag] AND t.[account_id] = i.[account_id] AND t.[date_start] = i.[date_start] AND t.[gender_ag] = i.[gender_ag])
END